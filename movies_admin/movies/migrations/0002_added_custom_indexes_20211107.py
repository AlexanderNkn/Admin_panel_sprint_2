# Generated by Django 3.2 on 2021-11-07 11:22

from django.contrib.postgres.operations import AddIndexConcurrently
from django.db import migrations, models


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                AddIndexConcurrently(
                    model_name='Filmwork',
                    index=models.Index(fields=['creation_date'], name='film_work_creation_date_idx'),
                ),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                AddIndexConcurrently(
                    model_name='Person',
                    index=models.Index(fields=['birth_date'], name='person_birth_date_idx'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql=("CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS genre_film_work_film_work_id_genre_id_uniq "
                 "ON content.genre_film_work(film_work_id, genre_id)"),
            reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS genre_film_work_film_work_id_genre_id_uniq"
        ),
        migrations.RunSQL(
            sql=("CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS person_film_work_film_work_id_person_id_uniq "
                 "ON content.person_film_work(film_work_id, person_id)"),
            reverse_sql="DROP INDEX CONCURRENTLY IF EXISTS person_film_work_film_work_id_person_id_uniq"
        ),
    ]
